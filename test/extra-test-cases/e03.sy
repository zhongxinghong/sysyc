// test quad
// https://blog.csdn.net/y_universe/article/details/79372337

const int V = 510;

int G[V][V];
int degree[V];

int main()
{
    int i, j, k;
    int n;

    n = getint();

    i = 1;
    while (i <= n) {
        int u,v;
        while(1){
            v = getint();
            if(!v)
                break;
            if(!G[i][v]){
                G[i][v] = 1;
                degree[v] = degree[v] + 1;
            }
        }
      i = i + 1;
    }

    int flag = 0;
    i = 1;
    while (i <= n){
        j = 1;
        while (j <= n){
            if(degree[j] == 0){
                if(!flag){
                  putint(j);
                    flag = 1;
                }
                else
                  putint(j);
                degree[j] = degree[j] - 1;
                k = j;
                break;
            }
          j = j + 1;
        }
        j = 1;
        while (j <= n){
          if(G[k][j] == 1){
                G[k][j] = 0;
                degree[j] = degree[j] - 1;
            }
          j = j + 1;
        }
      i = i + 1;
    }

    return 0;
}
